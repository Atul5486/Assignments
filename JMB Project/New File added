import java.util.Scanner;
import java.time.LocalDate;
import java.text.NumberFormat;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Locale;
import java.time.LocalTime;
import java.time.ZonedDateTime;
import java.time.ZoneId;


class Main {
    public static Scanner inp = new Scanner(System.in);

    // Color codes
    public static final String RESET = "\u001B[0m";
    public static final String BOLD = "\u001B[1m";
    public static final String MAROON = "\u001B[48;5;52m";
    public static final String BG = "\u001B[47m";
    public static final String BLACK = "\u001B[30m";
    public static String RED = "\u001B[41m";

    static ZonedDateTime nowInIndia = ZonedDateTime.now(ZoneId.of("Asia/Kolkata"));
    static int hour = nowInIndia.getHour(); 


    public static void main(String[] args) {
        int ch;
        System.out.println(BOLD + MAROON);
        System.out.println("               ==================================="+MAROON);
        System.out.println("                          JMB MENU CARD           ");
        System.out.println("               ===================================" + RESET+BG+BLACK);
        JMB j = new JMB();
        do {
            System.out.println(RESET+BOLD + MAROON+"\n ===== Enter Your Choice ====="+RESET+BG+BLACK);
            System.out.println("1.VEGETARIAN THALI MENU");
            System.out.println("2.BREAKFAST MENU");
            System.out.println("3.MOCKTAIL MENU");
            System.out.println("4.Only For Ladies");
            System.out.println("5.View Bill & Exit");

            ch = inp.nextInt();
            switch (ch) {
                case 1: j.vegetarianThali(); j.orderThali(); break;
                case 2: j.breakfastMenu(); j.orderBreakfast(); break;
                case 3:j.mocktail(); j.orderMocktail(); break;
                case 4: if(hour>=16 && hour<=19){j.ladiesMenu();j.orderLadiesItems();}else System.out.println(RED+"This Service is currently Not available come between (4PM-6PM)"+BG);break;
                case 5: j.displayBill(); break;
                default:System.out.println(RED+"Invalid choice"+BG);

            }
        } while (ch != 5);
    }
}

class JMB {
    Locale indiaLocale = new Locale("en", "IN");
    NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(indiaLocale);
    Scanner inp = new Scanner(System.in);
     JMB() { details();backMenu(); }
    // Colors
    public static final String RESET = "\u001B[0m";
    public static final String BOLD = "\u001B[1m";
    public static final String MAROON = "\u001B[48;5;52m";
    public static final String BG = "\u001B[47m";
    public static final String BLACK = "\u001B[30m";
    public static final String MAGENTA ="\u001b[45m";
    public static String RED = "\u001B[41m";

    //Details info
    String name;
    int guest;
    int currGuest;
    String mob;
    String date;
    String billno="JMB"+String.valueOf((int)(Math.random()*10000));
    // Order storage
    
    String orderedItems[] = new String[100];
    double orderedPrices[] = new double[100];
    int orderedQty[] = new int[100];
    int orderCount = 0;
    double total = 0;

    //Date
    LocalDate enteredDate = null;
    LocalDate currentDate = LocalDate.now();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

    //Regex code
    String nameRegex ="^[A-Za-z' -]{1,40}$";
    String mobileRegex = "^(?:\\+91|0)?[6-9]\\d{9}$"; 

    //--------------- SELECTED THALI --------------

    String selectedItem1[]={"1.Soup or welcome drink","2.Vegetable dish"," ","1.Dal","1.Sweet Dish","1.Rice"};
    String selectedItem2[]={"1.Soup or welcome drink","2.Vegetable dish"," ","1.Dal","1.Sweet Dish or ice-cream","1.Rice","1.Paneer dish"};
    String selectedItem3[]={"1.Soup or welcome drink","2.Vegetable dish"," ","1.Dal","1.Sweet Dish or ice-cream","1.Rice","1.Paneer dish","1.Starter","Curd dish"};
    String selectedItem4[]={"1.Soup or welcome drink","2.Vegetable dish"," ","1.Dal","1.Sweet Dish or ice-cream","1.Rice","1.Paneer dish","1.Starter","Curd dish"};
    String selectedItem5[]={"1.Soup or welcome drink","2.Vegetable dish"," ","1.Dal","1.Sweet Dish or ice-cream","1.Rice","1.Paneer dish","1.Starter","Curd dish","1. Paneer Starter","1. Pasta (1 Type)","1. Ice-cream or Coffee"};
    String selectedItem6[]={"1.Soup or welcome drink","2.Vegetable dish"," ","1.Dal","1.Sweet Dish or ice-cream","1.Rice","1.Paneer dish","1.Starter","Curd dish","1. Paneer Starter","1. Pasta (1 Type)","1. Ice-cream or Coffee",""};

    //--------------- SELECTED Breakfast --------------
    String typeA[]={"Poha","Jalebi","Bread item","1.Tea or coffee"};
    String typeB[]={"Poha","Jalebi","Bread item","1.Tea or coffee","1.Heavy snacks"};
    String typeC[]={"Poha","Jalebi","Bread item","1.Tea or coffee","2.Heavy snacks",""};

    // ---------------- SELECTED TYPE ----------------
    String itemA[]={"1.Soup or welcome drink","1.Sweet Dish","1 Starter","1.Tea or coffee","1.Heavy snacks"};
    String itemB[]={"1.Soup or welcome drink","1.Sweet Dish","1 Starter","1.Tea or coffee","2.Heavy snacks",""};
    String itemC[]={"1.Soup or welcome drink","1.Sweet Dish","1 Starter","1.Tea or coffee","2.Heavy snacks","","1 Paneer Starter"};


    // ---------------- VEGETARIAN THALI ----------------
    String thali[] = {"Special Thali 1", "Special Thali 2", "Special Thali 3", "Special Thali 4", "Special Thali 5", "Special Thali 6"};
    double thaliPrice[] = {310, 360, 410, 470, 600, 700};
    void vegetarianThali() {
        System.out.println(RESET+BOLD + MAROON + "\n=== VEGETARIAN THALI MENU ===" + RESET+BG+BLACK);
        for (int i = 0; i < thali.length; i++) {
            System.out.printf("%d. %-20s %10.2f\n", (i+1), thali[i], thaliPrice[i]);
        }
    }
void vegetableA(){ 
        String item[]={"1.Soup or welcome drink","2.Vegetable dish","1.Dal","1.Sweet Dish","1.Rice","Roti,Naan","Butter Paratha","Pickle, Salad, Papad"};
        System.out.println(RESET+BOLD + MAROON + "\nGroup A Food Items (Rs. 310/-)" + RESET+BG+BLACK);
        for(String food:item)
        System.out.println(food);
    }
void vegetableB(){
        String item[]={"1.Soup or welcome drink","2.Vegetable dish","1.Paneer dish","1.Dal","1.Sweet Dish or ice-cream","1.Rice","Roti,Butter Naan,Butter paratha","Butter Paratha","Pickle, Salad, Papad"};
        System.out.println(RESET+BOLD + MAROON + "\nGroup B Food Items (Rs. 370/-)" + RESET+BG+BLACK);
        for(String food:item)
        System.out.println(food);
    }
void vegetableC(){
        String item[]={"1.Soup or welcome drink","1.Starter","2.Vegetable dish","Curd dish","1.Paneer dish","1.Dal","1.Sweet Dish or ice-cream","1.Rice","Roti,Butter Naan,Butter paratha","Butter Paratha","Pickle, Salad, Papad"};
        System.out.println(RESET+BOLD + MAROON + "\nGroup C Food Items (Rs. 410/-)" + RESET+BG+BLACK);
        for(String food:item) 
        System.out.println(food); 
    } 
void vegetableD(){
            String item[]={"1.Soup or welcome drink","2.Vegetable dish","1.Paneer dish","1.Dal","1.Sweet Dish or ice-cream","Rice","Roti,Butter Naan,Butter paratha","Butter Paratha","Pickle, Salad, Papad"};
            System.out.println(RESET+BOLD + MAROON + "\nGroup D Food Items (Rs. 470/-)" + RESET+BG+BLACK);
            for(String food:item)
            System.out.println(food);
    }
void vegetableE() {
    String items[] = {"1. Soup or Welcome Drink","1. Starter","1. Paneer Starter","1. Pasta (1 Type)","1. Paneer Dish","2. Vegetable Dish","1. Curd Dish","1. Dal","1. Rice","Roti, Naan, Paratha","Pickle, Salad, Papad","1. Sweet Dish","1. Ice-cream or Coffee"};
    System.out.println(RESET+BOLD + MAROON + "\nGroup E Food Items (Rs. 600/-)" + RESET+BG+BLACK);
    for (String food : items) 
        System.out.println(food);
    
    }
void vegetableF() {
    String items[] = {"1. Welcome Drink","2. Soup","3. Starter","1. Paneer Starter","1. Chinese Item","1. Paneer Dish","2. Vegetable Dish","1. Curd Dish","1. Dal","1. Rice","Roti, Naan, Paratha","Pickle, Salad, Papad","2. Sweet Dish","1. Ice-cream"};
    System.out.println(RESET+BOLD + MAROON + "\nGroup F Food Items (Rs. 700/-)" + RESET+BG+BLACK);
    for (String food : items) {
        System.out.println(food);
    }
    }   
void vegetableType(int thaliChoice){
             System.out.println(RESET+BOLD + MAROON + "Ordered Item Full list" + RESET+BG+BLACK);
        switch(thaliChoice){
            case 1:vegetableA();soupOrDrink(selectedItem1);allVegitable(selectedItem1);dalList(selectedItem1);sweetsList(selectedItem1,4);riceList(selectedItem1);dis(selectedItem1);break;
            case 2:vegetableB();soupOrDrink(selectedItem2);allVegitable(selectedItem2);paneerOrder(selectedItem2);dalList(selectedItem2);sweetsList(selectedItem2,4);riceList(selectedItem2);dis(selectedItem2);break;
            case 3:vegetableC();soupOrDrink(selectedItem3);starterList(selectedItem3,7);allVegitable(selectedItem3);curdOrder(selectedItem3);paneerOrder(selectedItem3);dalList(selectedItem3);sweetsList(selectedItem3,4);riceList(selectedItem3);dis(selectedItem3);break;
            case 4:vegetableD();soupOrDrink(selectedItem4);starterList(selectedItem4,7);allVegitable(selectedItem4);curdOrder(selectedItem4);paneerOrder(selectedItem4);dalList(selectedItem4);sweetsList(selectedItem4,4);riceList(selectedItem4);dis(selectedItem4);break;
            case 5:vegetableE();soupOrDrink(selectedItem5);starterList(selectedItem5,7);allVegitable(selectedItem5);pastaList(selectedItem5);curdOrder(selectedItem5);paneerStarterOrder(selectedItem5,9);paneerOrder(selectedItem5);dalList(selectedItem5);sweetsList(selectedItem5,4);riceList(selectedItem5);coffeeList(selectedItem5,11);dis(selectedItem5);break;
            case 6:vegetableF();soupSpecial();welcomeDrink(selectedItem6);starterSpecial(selectedItem6);paneerStarterOrder(selectedItem6,9);chineseItems();paneerOrder(selectedItem6);allVegitable(selectedItem6);curdOrder(selectedItem6);dalList(selectedItem6);riceList(selectedItem6);sweetsList(selectedItem6,4);iceCreamList(selectedItem6);dis(selectedItem6);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
}
    
    void orderThali() {
        System.out.println("Enter item number to order (0 to skip):");
        int choice = inp.nextInt();
        if(choice >=1 && choice <= thali.length){
        vegetableType(choice);
        if(orderedItems.length>=0){
        boolean isAlreadyOrdered = false;
        for (int i = 0; i <= orderCount; i++) {
            if (thali[choice - 1].equals(orderedItems[i])) {
             System.out.println("\n" + MAGENTA + "Item already added" + BG);
            isAlreadyOrdered = true;
            break;
     }
    }
        if (!isAlreadyOrdered) {
            addOrder(thali[choice - 1], thaliPrice[choice - 1]);
        }

            }
        }
    }
    
    // ---------------- BREAKFAST ----------------
    String breakfast[] = {"Breakfast Type A", "Breakfast Type B", "Breakfast Type C"};
    double breakfastPrice[] = {200, 230, 250};
    void breakfastMenu() {
        System.out.println(RESET+BOLD + MAROON + "\n=== BREAKFAST MENU ===" + RESET+BG+BLACK);
        for (int i = 0; i < breakfast.length; i++) {
            System.out.printf("%d. %-15s %10.2f\n", (i+1), breakfast[i], breakfastPrice[i]);
        }
    }
    void breakfastType(char choiceBreak){
        System.out.println(RESET+BOLD + MAROON + "Ordered Item Full list" + RESET+BG+BLACK);
        switch(choiceBreak){
            case 'A':breakfastA();teaOrCoffee(typeA);disBreak(typeA);break;
            case 'B':breakfastB();teaOrCoffee(typeB);snacksList(typeB,4);disBreak(typeB);break;
            case 'C':breakfastC();teaOrCoffee(typeC);snacksListC(typeC,4,5);disBreak(typeC);break;
            default:System.out.println(RED+"Invalid choice"+BG);
            // case 'B':breakfastB();break;
        }
    }
    void breakfastA(){ System.out.println("Breakfast of type A"); String items[]={"1.Poha","1.Jalebi","1.Bread item","1.Tea or coffee"}; for(String item:items){ System.out.println(item); } } void breakfastB(){ System.out.println("Breakfast of type B"); String items[]={"1.Poha","1.Jalebi","1.Bread item","1.Heavy snacks","1.Tea or coffee"}; for(String item:items){ System.out.println(item); } } void breakfastC(){ System.out.println("Breakfast of type C"); String items[]={"1.Poha","1.Jalebi","1.Bread item","2.Heavy snacks","1.Tea or coffee"}; for(String item:items){ System.out.println(item); } }
    void orderBreakfast() {
        boolean isAlreadyOrdered = false;
        System.out.println("Enter item number to order (0 to skip):");
        int choice = inp.nextInt();
        if(choice >=1 && choice <= breakfast.length){
            char breakChoice=breakfast[choice-1].charAt((breakfast[choice-1].length())-1);
            breakfastType(breakChoice);

        if(orderedItems.length>=0){
        for (int i = 0; i <= orderCount; i++) {
            if(breakfast[choice-1].equals(orderedItems[i])){
             System.out.println("\n" + MAGENTA + "Item already added" + BG);
            isAlreadyOrdered = true;
            break;
            }
        }   
        if (!isAlreadyOrdered) {
            addOrder(breakfast[choice-1], breakfastPrice[choice-1]);
        }

      }
        }
}
    // ---------------- SOUP ----------------
    String soup[] = {"Tomato Soup", "Veg Soup", "Hot & Sour Veg Soup", "Lemon Coriander"};
    double soupPrice[] = {50, 60, 75, 65};
    void soupMenu() {
        System.out.println(RESET+BOLD + MAROON + "\n=== SOUP MENU ===" + RESET+BG+BLACK);
        for (int i = 0; i < soup.length; i++) {
            System.out.printf("%d. %-25s %10.2f\n", (i+1), soup[i], soupPrice[i]);
        }
    }
    // ---------------- MOCKTAIL ----------------
    String mocktails[] = {"Blue Lagoon", "Blowgun Kesher Pista", "Fresh Lime Water", "Butter Milk",
                          "Orange Pink City", "Strawberry Delight", "Jal Jeera", "Rasna Water"};
    double mocktailPrice[] = {100, 120, 80, 60, 140, 160, 70, 50};
    void mocktail() {
        System.out.println(RESET+BOLD + MAROON + "\n=== MOCKTAIL MENU ===" + RESET+BG+BLACK);
        for (int i = 0; i < mocktails.length; i++) {
            System.out.printf("%d. %-25s %10.2f\n", (i+1), mocktails[i], mocktailPrice[i]);
        }
    }
    void orderMocktail() {
        System.out.println("Enter item number to order (0 to skip):");
        int choice = inp.nextInt();
        boolean isAlreadyOrdered = false;
        if(choice >=1 && choice <= mocktails.length){
         if(orderedItems.length>=0){
        for(int i=0;i<=orderCount;i++){
             if(mocktails[choice-1].equals(orderedItems[i])){
                System.out.println("\n"+MAGENTA+"Item already added"+BG);
            isAlreadyOrdered = true;
            break;
     }
    }
        if (!isAlreadyOrdered) {
            addOrder(mocktails[choice-1], mocktailPrice[choice-1]);
        }
            }          
            }
        
        }
    // ---------------- ONLY FOR LADIES ----------------
String ladies[]={"Item Type A","Item Type B","Item Type C"};
double ladiesItemPrice[]={210,250,300};

void ladiesMenu(){
        System.out.println(RESET+BOLD + MAROON + "\n=== ONLY FOR LADIES MENU ===" + RESET+BG+BLACK);
        for (int i = 0; i < ladies.length; i++) {
            System.out.printf("%d. %-15s %10.2f\n", (i+1), ladies[i], ladiesItemPrice[i]);
        }
}

void ladiesType(int choice){
        // System.out.println(RESET+BOLD + MAROON + "Ordered Item Full list" + RESET+BG+BLACK);
        switch(choice){
            case 'A':itemsA();soupOrDrink(itemA);sweetsList(itemA,1);starterList(itemA,2);teaOrCoffee(itemA);snacksList(itemA,4);disBreak(itemA);break;
            case 'B':itemsB();soupOrDrink(itemB);sweetsList(itemB,1);starterList(itemB,2);teaOrCoffee(itemB);snacksListC(itemB,4,5);disBreak(itemB);break;
            case 'C':itemsC();soupOrDrink(itemC);sweetsList(itemC,1);starterList(itemC,2);teaOrCoffee(itemC);snacksListC(itemC,4,5);paneerStarterOrder(itemC,6);disBreak(itemC);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
    }
void itemsA(){
            System.out.println(RESET+BOLD + MAROON + "Item Type A  Full list" + RESET+BG+BLACK);
            for(String item:itemA){ System.out.println(item);
}
}
void itemsB(){
            System.out.println(RESET+BOLD + MAROON + "Item Type A  Full list" + RESET+BG+BLACK);
            for(String item:itemB){ System.out.println(item);
}
}
void itemsC(){
            System.out.println(RESET+BOLD + MAROON + "Item Type A  Full list" + RESET+BG+BLACK);
            for(String item:itemC){ System.out.println(item);
}}
     void orderLadiesItems() {
        boolean isAlreadyOrdered = false;
        System.out.println("Enter item number to order (0 to skip):");
        int choice = inp.nextInt();
        if(choice >=1 && choice <= breakfast.length){
            char breakChoice=ladies[choice-1].charAt((ladies[choice-1].length())-1);
            ladiesType(breakChoice);

        if(orderedItems.length>=0){
        for (int i = 0; i <= orderCount; i++) {
            if(ladies[choice-1].equals(orderedItems[i])){
             System.out.println("\n" + MAGENTA + "Item already added" + BG);
            isAlreadyOrdered = true;
            break;
            }
        }   
        if (!isAlreadyOrdered) {
            addOrder(ladies[choice-1], ladiesItemPrice[choice-1]);
        }
        }
        }
     }
   
    // ---------------- PANEER STARTERS ----------------
    String paneerStarter[] = {"Paneer Chilli", "Paneer Tikka", "Dragon Paneer", "Paneer 65",
                              "Paneer Pudina Tikka", "Paneer Achari Tikka"};
    double paneerStarterPrice[] = {200, 220, 250, 210, 230, 240};
    void paneerStarters() {
        System.out.println(RESET+BOLD + MAROON + "\n=== PANEER STARTERS ===" + RESET+BG+BLACK);
        for (int i = 0; i < paneerStarter.length; i++) {
            System.out.printf("%d. %-25s %10.2f\n", (i+1), paneerStarter[i], paneerStarterPrice[i]);
        }
    }
    // ---------------- PANEER DISHES ----------------
    String paneerDish[] = {"Paneer Butter Masala", "Paneer Punjabi", "Paneer Palak", "Paneer Mutter",
                           "Paneer Do Pyaza", "Paneer Tikka Masala", "Paneer Kadai", "Methi Paneer",
                           "Corn Paneer", "Paneer Kolhapuri", "Paneer Chatpatta"};
    double paneerDishPrice[] = {250, 240, 230, 220, 240, 260, 250, 230, 220, 270, 210};
    void paneerDishes() {
        System.out.println(RESET+BOLD + MAROON + "\n=== PANEER DISHES ===" + RESET+BG+BLACK);
        for (int i = 0; i < paneerDish.length; i++) {
            System.out.printf("%d. %-25s %10.2f\n", (i+1), paneerDish[i], paneerDishPrice[i]);
        }
    }
    // ---------------- CURD DISHES ----------------
    String curd[] = {"Veg Raita", "Loki Raita", "Aloo Raita", "Dahi Papdi",
                     "Boondi Raita", "Fruit Raita", "Dahi Vada"};
    double curdPrice[] = {80, 90, 70, 100, 75, 120, 110};
    void curdDishes() {
        System.out.println(RESET+BOLD + MAROON + "\n=== CURD DISHES ===" + RESET+BG+BLACK);
        for (int i = 0; i < curd.length; i++) {
            System.out.printf("%d. %-20s %10.2f\n", (i+1), curd[i], curdPrice[i]);
        }
    }
    // ---------------- SWEETS ----------------
    String sweet[] = {"Gulab Jamun", "Gajar Ka Halwa", "Aam Khand", "Vanilla",
                      "Moong Ka Halwa", "Shreekhand", "Sitaphal Basundi"};
    double sweetPrice[] = {80, 100, 120, 90, 110, 130, 140, 150};
    void sweetsOrIceCream() {
        System.out.println(RESET+BOLD + MAROON + "\n=== SWEETS LIST ===" + RESET+BG+BLACK);
        for (int i = 0; i < sweet.length; i++) {
            System.out.printf("%d. %-25s %10.2f\n", (i+1), sweet[i], sweetPrice[i]);
        }
    }
    String[] starter = {"Spring Rolls", "Momos","French fries", "Cheese Balls", "Bruschetta","Veg lollipop","Noodles"};

void chineseItems(){
    int ch;
    String items[] = {"Veg Manchurian","Chilli Paneer","Hakka Noodles","Fried Rice","Spring Rolls","Schezwan Noodles","Chilli Mushroom","Crispy Veg"};
     System.out.println(RESET+BOLD + MAROON + "\n=== CHINESE FOOD ITEMS  ===" + RESET+BG+BLACK);
        for (int i = 0; i < items.length; i++) {
            System.out.println((i+1)+". "+items[i]);
        }
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:System.out.println(MAGENTA+"You Selected "+items[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>items.length);
}
    // ---------------- Thali Method ----------
    void soupSpecial(){
        soupMenu();
           int v1,v2;
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter 1 soup "+RESET+BG+BLACK);
        v1=inp.nextInt();
        if(v1<=soup.length)
        System.out.println(MAGENTA+"You Selected "+soup[v1-1]+BG);
        else
        System.out.println(RED+"Invalid choice"+BG);
        }while(v1<1 || v1>4);
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter 2 soup "+RESET+BG+BLACK);
        v2=inp.nextInt();
        if(v1==v2){
            System.out.println("Select another soup");
            v2=inp.nextInt();
        }
        if(v2<=soup.length){
          System.out.println(MAGENTA+"You Selected "+soup[v2-1]+BG);
        }else
        System.out.println(RED+"Invalid choice"+BG);
        }while(v2<1||v2>4|| v1==v2);
    }
void starterSpecial(String[] selectedItems) {
    System.out.println(RESET + BOLD + MAROON + "===== STARTER LIST =====" + RESET + BG + BLACK);

    for (int i = 0; i < starter.length; i++) {
        System.out.println((i + 1) + ". " + starter[i]);
    }

    int[] selections = new int[3]; // to keep track of selected indices
    int i = 0;

    while (i < 3) {
        System.out.println(RESET + BOLD + MAROON + "Enter Starter #" + (i + 1) + RESET + BG + BLACK);
        int choice = inp.nextInt();

        if (choice < 1 || choice > starter.length) {
            System.out.println(RED + "Invalid choice. Please enter a number between 1 and " + starter.length + BG);
            continue;
        }

        boolean duplicate = false;
        for (int j = 0; j < i; j++) {
            if (selections[j] == choice) {
                duplicate = true;
                break;
            }
        }

        if (duplicate) {
            System.out.println(RED + "You have already selected this starter. Choose another one." + BG);
            continue;
        }

        // Store selected starter index
        selections[i] = choice;

        // Append the starter name to selectedItems[12]
        if (selectedItems[12] == null) {
            selectedItems[12] = starter[choice - 1];
        } else {
            selectedItems[12] += ", " + starter[choice - 1];
        }

        System.out.println(MAGENTA + "You Selected " + starter[choice - 1] + BG);
        i++;
    }
}

    void welcomeDrink(String selectedItems[]){
        String drink[]={"Fanta","Mazza","Coke-cola"};
        System.out.println(RESET+BOLD + MAROON + "===== WELCOME DRINK ====="+RESET+BG+BLACK);
        for(int i=0;i<drink.length;i++){
            System.out.println((i+1)+". "+drink[i]);
        }
        int ch;
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:System.out.println(MAGENTA+"You Selected "+drink[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>3);
        selectedItems[0]=drink[ch-1];
    }
    void soupOrDrink(String selectedItems[]){
        int sd;
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice "+RESET+BG+BLACK+"\n1.Soup\n2.Welcome Drink");
        sd=inp.nextInt();
        switch(sd){
                case 1:soupMenu();
                int ch;
                do{
                System.out.println(RESET+BOLD + MAROON + "Enter a choice "+RESET+BG+BLACK);
                ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:System.out.println(MAGENTA+"You Selected "+soup[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
          }
        }while(ch<=0 || ch>4);
        selectedItems[0]=soup[ch-1];
          return;
        case 2:welcomeDrink(selectedItems);return;
        default:System.out.println(MAGENTA+"Re-enter Item"+BG);
        }
        }while(sd!=1||sd!=2);
    }
    void allVegitable(String selectedItems[]){
        String[] veg = {"Veg Kolhapuri", "Veg Jalfrezi", "Veg Kadai", "Vegetable Pulao", "Dal Tadka", "Dal Makhani", "Chana Masala", "Rajma Masala", "Mix Veg Curry", "Aloo Gobi", "Aloo Matar", "Baingan Bharta", "Bhindi Masala", "Stuffed Capsicum", "Tandoori Aloo", "Veg Biryani", "Dum Aloo", "Lauki Kofta", "Malai Kofta", "Kadhi Pakora", "Palak Corn", "Methi Malai Matar", "Vegetable Stew", "Vegetable Hakka Noodles", "Vegetable Manchurian", "Gobi 65", "Tinda Masala", "Arbi Masala", "Kundru Fry", "Sambar"};
        System.out.println(RESET+BOLD + MAROON + "\n===== LIST OF VEGITABLES =====" + RESET+BG+BLACK);
        for(int i=0;i<veg.length;i++){
            System.out.println((i+1)+". "+veg[i]);
        }
        int v1,v2;
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter 1 vegitable "+RESET+BG+BLACK);
        v1=inp.nextInt();
        if(v1<=veg.length)
        System.out.println(MAGENTA+"You Selected "+veg[v1-1]+BG);
        else
        System.out.println(RED+"Invalid choice"+BG);
        }while(v1<1 || v1>30);
        selectedItems[1]=veg[v1-1];
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter 2 vegitable "+RESET+BG+BLACK);
        v2=inp.nextInt();
        if(v1==v2){
            System.out.println("Select another one vegitable");
            v2=inp.nextInt();
        }
        if(v2<=veg.length){
          System.out.println(MAGENTA+"You Selected "+veg[v2-1]+BG);
        }else
        System.out.println(RED+"Invalid choice"+BG);
        }while(v2<1||v2>30|| v1==v2);
        selectedItems[2]=veg[v2-1];
    }
    void dalList(String selectedItems[]){
        int ch;
       String[] dal = {"Dal Makhani", "Tadka Dal", "Dal Fry", "Chana Dal", "Moong Dal", "Panchmel Dal", "Masoor Dal", "Dal Tadka with Butter", "Dal Bukhara", "Dal Palak"};
        System.out.println(RESET+BOLD + MAROON + "===== DAL LIST ====="+RESET+BG+BLACK);
        for(int i=0;i<dal.length;i++){
            System.out.println((i+1)+". "+dal[i]);
        }
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:System.out.println(MAGENTA+"You Selected "+dal[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>10);
        selectedItems[3]=dal[ch-1];
    }
    void iceCreamList(String selectedItems[]){
        int ch;
        String[] iceCream = {"Vanilla", "Chocolate", "Strawberry", "Mango", "Butterscotch"};
        System.out.println(RESET+BOLD + MAROON + "===== Ice-Cream LIST ====="+RESET+BG+BLACK);
        for(int i=0;i<iceCream.length;i++){
            System.out.println((i+1)+". "+iceCream[i]);
        }
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:System.out.println(MAGENTA+"You Selected "+iceCream[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>5);
        selectedItems[11]=iceCream[ch-1];
    }
    void riceList(String selectedItems[]){ 
        int ch;
        String[] rice = {"Basmati Rice", "Jeera Rice", "Fried Rice", "Saffron Rice", "Lemon Rice"};
        System.out.println(RESET+BOLD + MAROON + "===== RICE LIST ====="+RESET+BG+BLACK);
        for(int i=0;i<rice.length;i++){
            System.out.println((i+1)+". "+rice[i]);
        }
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:System.out.println(MAGENTA+"You Selected "+rice[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>5);
        selectedItems[5]=rice[ch-1];
    }
    void pastaList(String selectedItems[]){
        int ch;
        String[] pasta = {"White Sauce Pasta", "Red Sauce Pasta", "Cheese Pasta", "Veggie Pasta", "Macaroni Pasta", "Penne Pasta", "Garlic Butter Pasta", "Masala Pasta", "Herb Pasta"};
        System.out.println(RESET+BOLD + MAROON + "===== PASTA LIST ====="+RESET+BG+BLACK);
        for(int i=0;i<pasta.length;i++){
            System.out.println((i+1)+". "+pasta[i]);
        }
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:System.out.println(MAGENTA+"You Selected "+pasta[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>9);
        selectedItems[10]=pasta[ch-1];
    }
    void coffeeList(String selectedItems[],int index){
        int ch;
        String[] coffee = {"Espresso", "Cappuccino", "Latte", "Americano", "Mocha", "Macchiato", "Irish Coffee", "Cold Coffee"};
        System.out.println(RESET+BOLD + MAROON + "===== COFFEE LIST ====="+RESET+BG+BLACK);
        for(int i=0;i<coffee.length;i++){
            System.out.println((i+1)+". "+coffee[i]);
        }
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();

        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:System.out.println(MAGENTA+"You Selected "+coffee[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>8);
        selectedItems[index]=coffee[ch-1];
    }
    void starterList(String selectedItems[],int index){
        int ch;
        System.out.println(RESET+BOLD + MAROON + "===== STARTER LIST ====="+RESET+BG+BLACK);
        for(int i=0;i<starter.length;i++){
            System.out.println((i+1)+". "+starter[i]);
        }
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:System.out.println(MAGENTA+"You Selected "+starter[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>7);
        selectedItems[index]=starter[ch-1];
    }
    void curdOrder(String selectedItems[]){
        curdDishes();
        int ch;
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:System.out.println(MAGENTA+"You Selected "+curd[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>7);
        selectedItems[8]=curd[ch-1];
    }
    void paneerOrder(String selectedItems[]){
        System.out.println(RESET+BOLD + MAROON + "===== PANEER DISH LIST =====" + RESET+BG+BLACK);
        for(int i=0;i<paneerDish.length;i++)
        System.out.println((i+1)+". "+paneerDish[i]);
        int ch;
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:System.out.println(MAGENTA+"You Selected "+paneerDish[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>11);
        selectedItems[6]=paneerDish[ch-1];
    }
    void paneerStarterOrder(String selectedItems[],int index){
        System.out.println(RESET+BOLD + MAROON + "===== PANEER STARTER LIST =====" + RESET+BG+BLACK);
        for(int i=0;i<paneerStarter.length;i++)
        System.out.println((i+1)+". "+paneerStarter[i]);
        int ch;
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:System.out.println(MAGENTA+"You Selected "+paneerStarter[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>6);
        selectedItems[index]=paneerStarter[ch-1];
    }
    void sweetsList(String selectedItems[],int index){
        System.out.println(RESET+BOLD + MAROON + "===== SWEETS LIST =====" + RESET+BG+BLACK);
        for(int i=0;i<sweet.length;i++)
        System.out.println((i+1)+". "+sweet[i]);
        int ch;
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter a choice number "+RESET+BG+BLACK);
        ch=inp.nextInt();
        switch(ch){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:System.out.println(MAGENTA+"You Selected "+sweet[ch-1]+BG);break;
            default:System.out.println(RED+"Invalid choice"+BG);
        }
        }while(ch<=0 || ch>7);
        selectedItems[index]=sweet[ch-1];
    }
        // ---------------- ORDER SYSTEM ----------------
    void addOrder(String item, double price) {
        orderedItems[orderCount] = item;
        orderedPrices[orderCount] = price;
        total += price * guest;
        orderCount++;
        System.out.println(item + " added to order.");
    }
    void details(){
        do{
        System.out.print("Enter your name : ");
        name=inp.nextLine();
        }while(!name.matches(nameRegex));
        do{
        System.out.print("Enter total number of guest : ");
        guest=inp.nextInt();
        }while(guest<=0 ||guest>1000);
        inp.nextLine();
        do{
        System.out.print("Enter mobile number : "+BG);
        mob=inp.nextLine();
        }while(!mob.matches(mobileRegex));
        while (true) {
            System.out.print("Enter date (dd-MM-yyyy) : ");
            String date = inp.nextLine();
            try {
                enteredDate = LocalDate.parse(date, formatter);

                if (!enteredDate.isBefore(currentDate)) {
                    break;
                } else {
                    System.out.println(RED+"Please try again."+BG);
                }
            } catch (DateTimeParseException e) {
                System.out.println("Invalid date format! Please enter date as dd-MM-yyyy");
            }
        }
    }
    void displayBill() {
        do{
        System.out.println(RESET+BOLD + MAROON + "How many guest present here (Max 1000)" + RESET+BG+BLACK);
        System.out.print("Enter total number of guest : ");
        currGuest=inp.nextInt();
        }while(guest<=0 ||guest>1000);
        int extra=0;
        int rem=0;
        if(guest>=100){
            extra=5;
        }
        if(currGuest<=guest){
            total=total;
        }
        else if(currGuest>(guest+extra)){
            rem=currGuest-guest;

            for(int i=0;i<orderedPrices.length;i++){
                total+=rem*orderedPrices[i];
            }
        }
        System.out.print("\u001b[2J\u001b[H");
        System.out.println(RESET+BOLD + MAROON + "\n\t\t===============  JMB BILL   ===============" + RESET+BG+BLACK);
        System.out.println("\n--------------------------------------------\n");
        System.out.printf("%-10s%2s%25s%2s%n", "Bill No:", billno, "Customer Name:", name);
        System.out.printf("%-10s%2s%25s%2s%n", "No. of guest:", currGuest,"Booking Date:", date);
        System.out.println("Mobile no : "+ mob);
        System.out.println("Today date : "+LocalDate.now());
        System.out.println("\n------------------------------------------------------");
        System.out.printf("S.no"+"%-25s %-10s %-10s\n", "  Item", "Qty", "Price(Rs)");
        System.out.println("------------------------------------------------------");
        for (int i = 0; i < orderCount; i++) {
            System.out.printf((i+1)+".  %-25s %-10d %-10.2f\n", orderedItems[i], currGuest, orderedPrices[i]);
        }
        System.out.println("------------------------------------------------------");
        System.out.println("Total Bill (Member): " + ((guest >= currGuest) ? guest : currGuest)+"         Extra Member : "+rem);
        System.out.printf("TOTAL: %s\n", currencyFormatter.format(total));
        double gst=total*9/100;
        double totalGst=total+gst;
        System.out.printf("GST(9%%): %s%n", currencyFormatter.format(gst));
        System.out.println("--------------------------------------------");
        System.out.printf("%-20s %s%n", "TOTAL(in. GST):", currencyFormatter.format(totalGst));
        System.out.println(RESET);
        System.out.println(BOLD + MAROON + "\t\t==========  THANK YOU VISIT AGAIN ! ==========" + RESET);
        System.out.println(RESET);
        
    }
void snacksListC(String type[], int index1, int index2) {
    String[] snacks = {
        "Samosa", "Spring Rolls", "Paneer Pakora", "Veg Cutlet", "Aloo Tikki",
        "Onion Pakora", "Bread Roll", "Cheese Balls", "Hara Bhara Kabab", "French Fries"
    };

    int ch1, ch2;

    System.out.println(RESET + BOLD + MAROON + "===== HEAVY SNACKS =====" + RESET + BG + BLACK);
    for (int i = 0; i < snacks.length; i++) {
        System.out.println((i + 1) + ". " + snacks[i]);
    }
    do {
        System.out.println(RESET + BOLD + MAROON + "Enter your choice 1" + RESET + BG + BLACK);
        ch1 = inp.nextInt();
        if (ch1 >= 1 && ch1 <= snacks.length) {
            type[index1] = snacks[ch1 - 1];
        } else {
            System.out.println("Invalid choice! Please try again.");
        }
    } while (ch1 < 1 || ch1 > snacks.length);

    do {
        System.out.println(RESET + BOLD + MAROON + "Enter your choice 2 (different from choice 1)" + RESET + BG + BLACK);
        ch2 = inp.nextInt();

        if (ch2 == ch1) {
            System.out.println("You already selected this item. Choose another one.");
            continue; 
        }

        if (ch2 >= 1 && ch2 <= snacks.length) {
            type[index2] = snacks[ch2 - 1];
        } else {
            System.out.println("Invalid choice! Please try again.");
        }
    } while (ch2 < 1 || ch2 > snacks.length || ch2 == ch1);
}

void snacksList(String type[],int index){
    String[] snacks = {"Samosa", "Spring Rolls", "Paneer Pakora", "Veg Cutlet", "Aloo Tikki", "Onion Pakora", "Bread Roll", "Cheese Balls", "Hara Bhara Kabab", "French Fries"};
        int ch;
        System.out.println(RESET+BOLD + MAROON + "===== HEAVY SNACKS =====" + RESET+BG+BLACK);
        for(int i=0;i<snacks.length;i++){
            System.out.println((i+1)+". "+snacks[i]);
        }
        do{
        System.out.println(RESET+BOLD + MAROON + "Enter your choice" + RESET+BG+BLACK);
        ch=inp.nextInt();
        if(ch>0 && ch<=snacks.length){
            type[index]=snacks[ch-1];
        }
        }while(ch<1 || ch>snacks.length);
    }
    
  void dis(String str1[]){
    System.out.println(RESET+BOLD + MAROON + "===== OREDRED THALI ITEMS =====" + RESET+BG+BLACK);
    for(String str:str1)
    System.out.println(str);
    System.out.println("Roti,Naan,Butter Paratha\nPickle, Salad, Papad");
}  
  void disBreak(String str1[]){
    System.out.println(RESET+BOLD + MAROON + "===== OREDRED ITEMS =====" + RESET+BG+BLACK);
    for(String str:str1)
    System.out.println(str);
}  
void teaOrCoffee(String type[]){
    int ch;
    do{
    System.out.println(RESET+BOLD + MAROON + "Enter your choice"+RESET +BG+BLACK+"\n1.Tea\n2.Coffee");
    ch=inp.nextInt();
    if(ch==1){
        type[3]="Tea";
    }else if(ch==2){
    coffeeList(type,3);
    }else{
        System.out.println(RED+"Invalid choice"+BG);
    }
    }while(ch<=0 || ch>2);
}
private static void backMenu(){
     // ===>START
     System.out.printf(RESET+MAROON+"%-60s%s%-97s%s%n",BOLD,MAROON,"WEL COME TO JMB (JAIN MITHAI BHANDHAR )", RESET);  
     System.out.printf(MAROON+String.format("%-30s%s%-80s%-57s%s%n", MAROON,BOLD , "{VEGETABLES}","{DAL}", RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Nav Ratan Korma ","*Methi Mutter Malai",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-25s%-50s%s",BG,BLACK,"*Dal Fry ","*Dal Makhani",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*lohori Aloo with Mutter ","*Haryali Kofla",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-25s%-50s%s",BG,BLACK,"*Dal Tadka","*Dal Panchrangi",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Mix Veg ","*Chana Masala",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%-32s%-51s%s",MAROON,BOLD,"{RICE} ",RESET,RESET));
   //   System.out.printf("%-60s","------------------");
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Green Chana (Seasonal)","*Bhindi Masala",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-25s%-50s%s",BG,BLACK,"*Rice ","*Veg Pulao",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Corn Palak ","*Jeera Aloo",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-25s%-50s%s",BG,BLACK,"*Jeera Rice ","*Veg Fried Rice",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo 65 ","*Dum Aloo",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-25s%-50s%s",BG,BLACK,"*Green Peas Pulao ","*Veg Biryani",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Alloo Mutter ","*Gujrati Aloo",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%-32s%-51s%s",MAROON,BOLD,"{ROTI} ",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo Capsicum ","*Tinda Masala",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-25s%-50s%s",BG,BLACK,"*Roti ","*Naan",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo Do Pyaza ","*Aloo Palak",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-25s%-50s%s",BG,BLACK,"*Paratha ","*Missi Roti",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo Gobhi/Tomatto ","*Seasonal Veg",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-25s%-50s%s",BG,BLACK,"*Kulcha ","*Methi Poori",RESET,RESET));
//======> TERMS AND CONDITION
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Gobhi Mutter ","*Bhindi Do Pyaza",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%-28s%-55s%s",MAROON,BOLD,"{TERMS & CONDITION} ",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Kadi Panjabi ","*Veg Kolhapuri",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Non Refundable advance.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Veg. Kofla(Gol) ","*Corn Capsicum",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*100% Amount has to be paid before the function Date.",RESET,RESET));

//=====>SNACKS
     System.out.println((String.format("%-8s%-25s%-53s%s",MAROON,BOLD,"{SNACKS}",RESET,RESET))+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Food Parcel from the buffets strictly prohibited. ",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Idli/Vada Shambhar ","*Noodlies",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*All walking children will be charged full rate. ",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Pav Bhaji ","*Chhole Bhatura",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Buffet minimum 25 Person will be compulsory,",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Chhola Kulcha ","*Chhola Poori",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," Hi-Tea minimum 15 Person will be compulsory.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Methi Paratha ","*Paratha with Dahi(Limited)",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Taxes & Charges as applicable.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Stuffed Paratha","*Aloo Paratha",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Hall rent included in rates (for 3 hrs.) DJ, ",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Muli Paratha ","*Gobhi Paratha",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," Tent House rate will be applicable.",RESET,RESET));

//=========>STARTER
      System.out.println((String.format("%-8s%-25s%-53s%s",MAROON,BOLD,"{STARTER}",RESET,RESET))+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Starter will not be served after the lunch or dinner starts.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Mix Veg Pakoda ","*Veg Cutlet",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*No Item will be served on the table.Starter is limited.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Veg Finger","*Veg Kothey",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*If starter is served in buffet in lunch or dinner 20/-per person extra.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Bread Pakoda ","*Hara Bhara Kabab",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*An advance of 50% of the total estimated amount will enable",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Methi Kabab ","*Corn Chat",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," us to confirm your banquet booking. Payment is on guaranteed ",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Moong Pakoda","*Aloo Chat",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," person or onactual head count which ever is more.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Dragon Aloo ","*Saboo Dana vada",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Any change in menu has to be intimated at least 5 days in ",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Saboo Dana ","*Veg Manchurian Dry",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," advance, Any menu item beyond our Banquet Menu shall be charged",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Finger Chips ","*Tandori Manchurian",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," as per our Restaurant menu.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo Corn Kabab ","*Chinese Corn Kabab",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Booking confirmed in the open air is at customers risk with",RESET,RESET));

//=========>cHINESE & CONTINENTAL
     System.out.println((String.format("%-8s%-25s%-53s%s",MAROON,BOLD,"{CHINESE & CONTINENTAL}",RESET,RESET))+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," regards to any unfavorable climatic conditions Buffet of the",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Backed Veg ","*Backed Palak",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," Party will be served till 11.",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Veg Manchurian","*Veg Singapoori Noodles",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK,"*Hotel is not responsible for any gifts items, gifts vouchers,",RESET,RESET));
     System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Veg Noodles","*Veg Fried Rice ",RESET,RESET)+MAROON+"|"+RESET+String.format("%-8s%s%-75s%s",BG,BLACK," Owner him self is responsible for all his items.",RESET,RESET));

     System.out.printf("%-60s%s%-97s%s%n",RED,BLACK,"Parking of Vechicle is at  Vechicle Owner Risk",RESET);
     System.out.printf("%-70s%s%-87s%s",RED,BLACK,"THANK YOU FOR VISITING",RESET);
     System.out.println(RESET);
      
     
     
    //  System.out.printf(String.format("%-30s%s%-80s%s%n", MAROON,BOLD , "{VEGETABLES}", RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Nav Ratan Korma ","*Methi Mutter Malai",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*lohori Aloo with Mutter ","*Haryali Kofla",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Mix Veg ","*Chana Masala",RESET,RESET));

    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Green Chana (Seasonal)","*Bhindi Masala",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Corn Palak ","*Jeera Aloo",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo 65 ","*Dum Aloo",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Alloo Mutter ","*Gujrati Aloo",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo Capsicum ","*Tinda Masala",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo Do Pyaza ","*Aloo Palak",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Aloo Gobhi/Tomatto ","*Seasonal Veg",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Gobhi Mutter ","*Bhindi Do Pyaza",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Kadi Panjabi ","*Veg Kolhapuri",RESET,RESET));
    //  System.out.println(String.format("%-8s%s%-25s%-45s%s",BG,BLACK,"*Veg. Kofla(Gol) ","*Corn Capsicum",RESET,RESET));
    } 
}
